# Policy that validates requests that generate secret IDs for the AppRole
# auth method have certain metadata and allowed CIDR blocks
# This is an EGP that would be applied to paths like
# /auth/approle/role/<role_name>/secret-id where <role_name> is the name
# of a role ID created for the AppRole auth method

# Function that checks the token_bound_cidrs parameter
check_cidrs = func() {
  if "token_bound_cidrs" in keys(request.data) {
    if request.data.token_bound_cidrs contains "192.168.0.1/32" {
      return true
    } else {
      print("token_bound_cidrs does not contain a valid CIDR")
      return false
    }
  } else {
    print("token_bound_cidrs parameter is missing")
    return false
  }
}

check_hosts = func() {
  if "metadata" in keys(request.data) {
    metadata = request.data.metadata
    if "hostname" in keys(metadata) and metadata.hostname == "host1" {
      return true
    } else {
      print("hostname is missing from the metadata parameter or does not contain a valid host")
      return false
    }
  } else {
    print("the metadata parameter is missing and must include a valid hostname")
    return false
  }
}

# Call the validation functions
cidrs_validated = check_cidrs()
hosts_validated = check_hosts()

# Main rule
main = rule {
  cidrs_validated and hosts_validated
}
